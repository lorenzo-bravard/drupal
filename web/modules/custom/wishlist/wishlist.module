<?php

use Drupal\Core\Session\AccountProxy;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Messenger\MessengerInterface;
use Drupal\Node\Entity\Node;

function wishlist_theme($existing, $type, $theme, $path) {
    return[
        'wishlist_custom_template' => [
            'variables' => ['test_var' => NULL],
        ],
    ];
}


function wishlist_form_node_wishlist_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){

    // Ne pas afficher le champs pour les utilisateurs non-admins

    //recup 
    if(!isset($form['field_wishlist_owner']['widget'][0]['target_id'])){
        return;
    }
    $accountProxy = \Drupal::currentUser();
    if(!$accountProxy instanceof AccountProxy){
        return;
    }
    //Exclure ce comportement en cas d'admin
    if(in_array('administrator', $accountProxy->getRoles())){
        return;
    }
    $form['field_wishlist_owner']['widget'][0]['target_id']['#access'] = FALSE;

}

function wishlist_form_node_wishlist_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
     //hook pour modifier le form de crea de wishlist
    if (!isset($form['field_wishlist_owner']['widget'][0]['target_id'])){
        return;
    }
    //recup 
    $accountProxy = \Drupal::currentUser();
    if(!$accountProxy instanceof AccountProxy){
        return;
    }
    //Exclure ce comportement en cas d'admin
    if(in_array('administrator', $accountProxy->getRoles())){
        return;
    }
    $form['field_wishlist_owner']['widget'][0]['target_id']['#access'] = FALSE;
    $form['revision_information']['#access'] = FALSE;
}

function wishlist_form_node_wishlist_item_produit__form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
    // $wid = \Drupal::request()->query->get('wid');
    if (!isset($form['field_linked_wishlist']['widget'][0]['target_id'])){
        return;
    }
    //recup 
    $accountProxy = \Drupal::currentUser();
    if(!$accountProxy instanceof AccountProxy){
        return;
    }
    $wid = \Drupal::request()->query->get('wid');
    if(empty($wid)){
        \Drupal::messenger()->addMessage('Vous ne pouvez pas crée d\'item wishlist si vous n\'avez pas de wishlist', 'error');
       $redirect = new RedirectResponse('/');
       return $redirect->send();
    }else{
        $wishlist = Node::load($wid);
        $owner = $wishlist->get('field_wishlist_owner')->target_id;
    if($accountProxy->id() !== $owner){
        \Drupal::messenger()->addMessage('Vous ne pouvez pas crée d\'item wishlist si vous n\'avez pas de wishlist', 'error');
        $redirect = new RedirectResponse('/');
        return $redirect->send();
    };
    }
    //Exclure ce comportement en cas d'admin
    if(in_array('administrator', $accountProxy->getRoles())){
        return;
    }
    
    $form['field_linked_wishlist']['widget'][0]['target_id']['#access'] = FALSE;
    
}

function wishlist_form_node_wishlist_item_produit__edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
    // $wid = \Drupal::request()->query->get('wid');
    if (!isset($form['field_linked_wishlist']['widget'][0]['target_id'])){
        return;
    }
    //recup 
    $accountProxy = \Drupal::currentUser();
    if(!$accountProxy instanceof AccountProxy){
        return;
    }
    //Exclure ce comportement en cas d'admin
    if(in_array('administrator', $accountProxy->getRoles())){
        return;
    }
    
    $form['field_linked_wishlist']['widget'][0]['target_id']['#access'] = FALSE;
    $form['revision_information']['#access'] = FALSE;
}



function wishlist_node_presave(\Drupal\Core\Entity\EntityInterface $entity){
    if($entity->bundle() === 'wishlist'){
        if (!$entity->hasField('field_wishlist_owner')){
            return; 
        }
        //recup 
        $accountProxy = \Drupal::currentUser();
        if(!$accountProxy instanceof AccountProxy){
            return;
        }
        //Exclure ce comportement en cas d'admin
        if(in_array('administrator', $accountProxy->getRoles())){
            return;
        }

        $userId = $accountProxy->id();
        $entity->set('field_wishlist_owner', ['target_id' => $userId]);
    }

    if($entity->bundle() === 'wishlist_item_produit_'){
        if (!$entity->hasField('field_linked_wishlist')){
            return; 
        }
        //recup 
        $accountProxy = \Drupal::currentUser();
        if(!$accountProxy instanceof AccountProxy){
            return;
        }
        //Exclure ce comportement en cas d'admin
        if(in_array('administrator', $accountProxy->getRoles())){
            return;
        }

        $wid = \Drupal::request()->query->get('wid');
        if (!empty($vid)) {
            $entity->set('field_linked_wishlist', ['target_id' => $wid]);
        }


    }
}